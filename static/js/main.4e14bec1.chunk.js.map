{"version":3,"sources":["components/Card.js","components/Main.js","components/NavBar.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","onDateChange","dateChange","currentDate","value","readMore","state","setState","bind","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","className","id","this","data","title","media_type","data-src","alt","style","height","width","display","src","url","data-holder-rendered","explanation","minText","type","onClick","max","min","name","ref","c","React","Component","Main","date","Axios","get","then","response","spaceData","slice","NavBar","href","xmlns","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","aria-hidden","viewBox","focusable","d","cx","cy","r","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e14bec1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport '../css/App.css'\r\n\r\nclass Card extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {readMore: false};\r\n        this.onDateChange = this.onDateChange.bind(this);\r\n    }\r\n\r\n    onDateChange = () =>{\r\n      this.props.dateChange(this.currentDate.value)\r\n    }\r\n\r\n    readMore = () =>{\r\n      if(this.state.readMore){\r\n        this.setState({readMore: false})\r\n      }else{\r\n          this.setState({readMore: true})\r\n      }\r\n    }\r\n\r\n    render(){\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n\r\n        return(\r\n            <div>\r\n              <h1 className='mx-auto' id = \"title\">{this.props.data.title}</h1>\r\n              <div className=\"card mb-4 box-shadow\">\r\n                {this.props.data.media_type === \"image\" ? (\r\n                    <img \r\n                  className=\"card-img-top mx-auto mt-4\" \r\n                  data-src=\"holder.js/100px225?theme=thumb&amp;bg=55595c&amp;fg=eceeef&amp;text=Thumbnail\" \r\n                  alt=\"Thumbnail [100%x225]\" \r\n                  style={{height: \"auto\", width: \"75%\", display: 'block'}}\r\n                    src={this.props.data.url} \r\n                  data-holder-rendered=\"true\" />\r\n                ) : (\r\n                  <div className = \"embed-responsive embed-responsive-16by9\">\r\n                    <iframe title={this.props.data.title} width = \"800\" height = \"480\" src = {this.props.data.url}></iframe>\r\n                  </div>\r\n                )}\r\n                  <div className=\"card-body\">\r\n                    {this.state.readMore ? (\r\n                      <p className=\"card-text\">{this.props.data.explanation}</p>\r\n                    ) : (\r\n                      <p className=\"card-text\">{this.props.minText}</p>\r\n                    )}\r\n                    \r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                      {this.state.readMore ? (\r\n                        <button type=\"button\" className=\"btn btn-sm btn-danger\" onClick={this.readMore}>Less info</button>\r\n                      ): (\r\n                        <button type=\"button\" className=\"btn btn-sm btn-success\" onClick={this.readMore}>More info</button>\r\n                      )}\r\n                    </div>\r\n                    <p className = \"mt-2 font-weight-bold\">Enter the date you would like to see</p>\r\n                    <div className = \"d-inline-flex\">\r\n                      <input type=\"date\" className=\"mr-4\" max = {today} min = \"1995-06-16\" name = 'currentDate' ref={(c) => this.currentDate = c}></input>\r\n                      <button type=\"button\" className=\"btn btn-sm btn-info\" onClick={this.onDateChange}>Submit</button>\r\n                    </div>\r\n                </div>  \r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport '../css/App.css'\r\nimport Axios from 'axios';\r\n\r\nclass Main extends React.Component {\r\n\r\n    constructor(){\r\n      super();\r\n      this.state={spaceData:[]};\r\n      this.dateChange = this.dateChange.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n      //initial api call for data\r\n      Axios.get(`https://api.nasa.gov/planetary/apod?api_key=o2cSTyveBdiNPAf3yW9DIo4ClewjA4pxDjgLAPo6`)\r\n        .then(response => {\r\n          this.setState({\r\n            spaceData: response.data,\r\n            minText: (response.data.explanation.slice(0,100) +\"...\")\r\n          })\r\n        })\r\n    }\r\n\r\n    dateChange = (date) =>{\r\n      Axios.get(`https://api.nasa.gov/planetary/apod?api_key=o2cSTyveBdiNPAf3yW9DIo4ClewjA4pxDjgLAPo6&date=${date}`)\r\n        .then(response => {\r\n          this.setState({\r\n            spaceData: response.data,\r\n            minText: (response.data.explanation.slice(0,100) +\"...\")\r\n          })\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n          <div>    \r\n            <div className=\"py-4 bg-light\">\r\n              <div className=\"container\">\r\n                <Card data={this.state.spaceData} minText={this.state.minText} dateChange={this.dateChange}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n    }      \r\n}\r\n\r\nexport default Main;","import React from 'react';\n\nconst NavBar = () => {\n    return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <div className=\"container\">\n        <a href=\"/#\" className=\"navbar-brand d-flex align-items-center\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" aria-hidden=\"true\" className=\"mr-2\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path><circle cx=\"12\" cy=\"13\" r=\"4\"></circle></svg>\n          <strong>Astronomy Photo of the Day!</strong>\n        </a>\n        \n\n        {/* <div className=\"collapse navbar-collapse\" id=\"navbarsExample07\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/\">Home </a>\n            </li>\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/addItem\">Add champ</a>\n            </li>\n          </ul>\n            <li className=\"nav-item\">\n              <a className=\"nav-link disabled\" href=\"/#\">Disabled</a>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <a className=\"nav-link dropdown-toggle\" href=\"/#\" id=\"dropdown07\" data-toggle=\"dropdown\" aria-expanded=\"false\">Dropdown</a>\n              <div className=\"dropdown-menu\" aria-labelledby=\"dropdown07\">\n                <a className=\"dropdown-item\" href=\"/#\">Action</a>\n                <a className=\"dropdown-item\" href=\"/#\">Another action</a>\n                <a className=\"dropdown-item\" href=\"/#\">Something else here</a>\n              </div>\n            </li>\n        </div> */}\n      </div>\n    </nav>\n    );\n}\n \nexport default NavBar;","import React from 'react';\nimport '../css/footer.css';\n\nconst Footer = (props) => {\n    return (\n      <footer className=\"text-muted bg-dark\">\n        <div className=\"container\">\n          <p className=\"float-right\">\n            <a href=\"/#\">Back to top</a>\n          </p>\n          <p>Album example is &copy; Bootstrap, but please download and customize it for yourself!</p>\n          <p>New to Bootstrap? <a href=\"/#\">Visit the homepage</a> or read our <a href=\"/#\">getting started guide</a>.</p>\n        </div>\n      </footer>\n    );\n}\n \nexport default Footer;","import Main from './components/Main'\nimport NavBar from './components/NavBar'\nimport Footer from './components/Footer'\nimport './css/App.css';\n//import {BrowserRouter as Router, Switch, Route, Link, useLocation} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <Main />\n      <Footer />\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}