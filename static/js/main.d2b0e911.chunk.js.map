{"version":3,"sources":["components/Card.js","components/Main.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","componentDidMount","today","Date","setState","readMore","date","toISOString","slice","accessible","onDateChange","currentDate","value","dateChange","getPrevDay","dateOffset","chosenDate","state","dateCheck","setTime","getTime","alert","getNextDay","swapAccessible","bind","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","this","className","id","data","title","type","onChange","htmlFor","media_type","data-src","alt","style","height","width","display","src","url","data-holder-rendered","copyright","explanation","minText","onClick","max","min","name","ref","c","React","Component","Main","Axios","get","then","response","spaceData","NavBar","href","xmlns","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","aria-hidden","viewBox","focusable","d","cx","cy","r","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d2b0e911.chunk.js","sourcesContent":["import React from 'react'\nimport '../css/App.css'\n\nclass Card extends React.Component{\n    \n    constructor(props){\n      super(props);\n      this.state = {};\n      this.onDateChange = this.onDateChange.bind(this);\n      this.swapAccessible = this.swapAccessible.bind(this);\n    }\n\n    componentDidMount = () =>{\n      var today = new Date();\n      this.setState({\n        readMore: false,\n        date: today.toISOString().slice(0,10),\n        accessible: true\n      })\n    }\n\n    onDateChange = () =>{\n      this.setState({\n        date: this.currentDate.value\n      })\n      this.props.dateChange(this.currentDate.value)\n    }\n\n    getPrevDay = () =>{\n      //https://stackoverflow.com/questions/1296358/how-to-subtract-days-from-a-plain-date\n      //turn the currentDate.value into a date object and substract a day or add a day\n\n      var dateOffset = (24*60*60*1000);//equal to a full day (24hrs) - useful for adding or subtracting a day\n      var chosenDate = new Date(this.state.date);//date taken from the date input\n      var dateCheck = new Date(this.state.date);//date to check against the date input for pagination\n\n      chosenDate.setTime(chosenDate.getTime() - dateOffset)//subtracting a day to get the day prior\n      //Making sure that the chosenDate isn't more than one greater than the dateChecker\n      if(chosenDate < (dateCheck.getTime() - dateOffset)){\n        alert(\"Unable to retrieve data from the past. I haven't invented time travel yet.\")\n      }else{\n        chosenDate = chosenDate.toISOString().slice(0,10)\n        this.setState({date: chosenDate})\n        this.props.dateChange(chosenDate)\n      }\n    }\n\n    getNextDay = () =>{\n      var dateOffset = (24*60*60*1000);\n      var chosenDate = new Date(this.state.date);\n      var dateCheck = new Date(this.state.date);\n    \n      chosenDate.setTime(chosenDate.getTime() + dateOffset)\n\n      if(chosenDate > (dateCheck.getTime() + dateOffset)){\n        alert(\"Unable to retrieve data from the future. I haven't invented time travel yet.\")\n      }else{\n        chosenDate = chosenDate.toISOString().slice(0,10)\n        this.setState({date: chosenDate})\n        this.props.dateChange(chosenDate)\n      }\n    }\n\n    readMore = () =>{\n      if(this.state.readMore){\n        this.setState({readMore: false})\n      }else{\n          this.setState({readMore: true})\n      }\n    }\n\n    swapAccessible = () =>{\n      if(this.state.accessible){\n        this.setState({accessible: false})\n      }else{\n        this.setState({accessible: true})\n      }\n    }\n\n    render(){\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n        var yyyy = today.getFullYear();\n        today = yyyy + '-' + mm + '-' + dd;\n\n        return(\n            <div>\n              <div>\n                {this.state.accessible ?(\n                  <h1 className='mx-auto' id = \"title\">{this.props.data.title}</h1>\n                  ):(\n                    <h1 className='mx-auto' id = \"title-regular-font\">{this.props.data.title}</h1>\n                  )\n                }\n              </div>\n\n              <div id = \"access-checkbox\" className=\"d-block text-center \">\n                <input type = \"checkbox\" id = \"access\" className=\"mr-2\" onChange={this.swapAccessible}></input>\n                <label htmlFor = \"access\">Click here to disable the wacky title font</label>\n              </div>\n              \n              <div className=\"card mb-4 box-shadow\">\n                {this.props.data.media_type === \"image\" ? (\n                    <img \n                  className=\"card-img-top mx-auto mt-4\" \n                  data-src=\"holder.js/100px225?theme=thumb&amp;bg=55595c&amp;fg=eceeef&amp;text=Thumbnail\" \n                  alt=\"Thumbnail [100%x225]\" \n                  style={{height: \"auto\", width: \"75%\", display: 'block'}}\n                    src={this.props.data.url} \n                  data-holder-rendered=\"true\" />\n                ) : (\n                  <div className = \"embed-responsive embed-responsive-16by9\">\n                    <iframe title={this.props.data.title} width = \"800\" height = \"480\" src = {this.props.data.url}></iframe>\n                  </div>\n                )}\n                {this.props.data.copyright ? (\n                  <small className=\"d-block text-right mr-4 text-muted\">Copyright: <br/>{this.props.data.copyright}</small>\n                  ):(\n                  <small className=\"d-block text-right mr-4 text-muted\">No copyright<br/> info available</small>\n                  )\n                }\n                  <div className=\"card-body\">\n                    {this.state.readMore ? (\n                      <p className=\"card-text\">{this.props.data.explanation}</p>\n                    ) : (\n                      <p className=\"card-text\">{this.props.minText}</p>\n                    )}\n                    \n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      {this.state.readMore ? (\n                        <button type=\"button\" className=\"btn btn-sm btn-danger\" onClick={this.readMore}>Less info</button>\n                      ): (\n                        <button type=\"button\" className=\"btn btn-sm btn-success\" onClick={this.readMore}>More info</button>\n                      )}\n                    </div>\n\n                    <p className = \"mt-2 font-weight-bold\">Enter the date you would like to see</p>\n                    <div className = \"d-inline-flex\">\n                      <input type=\"date\" className=\"mr-4\" max = {today} min = \"1995-06-16\" name = 'currentDate' ref={(c) => this.currentDate = c}></input>\n                      <button type=\"button\" className=\"btn btn-sm btn-info\" onClick={this.onDateChange}>Submit</button>\n                    </div>\n\n                    <div className = \"d-flex py-3 justify-content-between\">\n                      <button className='btn btn-sm btn-outline-secondary' onClick={this.getPrevDay}>Previous day</button>\n                      <button className='btn btn-sm btn-outline-secondary' onClick={this.getNextDay}>Next day</button>\n                    </div>\n\n                </div>  \n            </div>\n          </div>\n        )\n    }\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\nimport '../css/App.css'\nimport Axios from 'axios';\n\nclass Main extends React.Component {\n\n    constructor(){\n      super();\n      this.state={spaceData:[]};\n      this.dateChange = this.dateChange.bind(this);\n    }\n\n    componentDidMount(){\n      //initial api call for data\n      Axios.get(`https://api.nasa.gov/planetary/apod?api_key=o2cSTyveBdiNPAf3yW9DIo4ClewjA4pxDjgLAPo6`)\n        .then(response => {\n          this.setState({\n            spaceData: response.data,\n            minText: (response.data.explanation.slice(0,100) +\"...\")\n          })\n        })\n    }\n\n    dateChange = (date) =>{\n      Axios.get(`https://api.nasa.gov/planetary/apod?api_key=o2cSTyveBdiNPAf3yW9DIo4ClewjA4pxDjgLAPo6&date=${date}`)\n        .then(response => {\n          if(response.data.explanation === \"\"){\n            this.setState({\n              spaceData: response.data,\n              minText: \"Explanation unavailable for this date\"\n            })\n          }else{\n            this.setState({\n              spaceData: response.data,\n              minText: (response.data.explanation.slice(0,100) +\"...\")\n            })\n          }\n        })\n    }\n\n    render(){\n        return(\n          <div>    \n            <div className=\"py-4 bg-light\">\n              <div className=\"container\">\n                <Card data={this.state.spaceData} minText={this.state.minText} dateChange={this.dateChange}/>\n              </div>\n            </div>\n          </div>\n        )\n    }      \n}\n\nexport default Main;","import React from 'react';\n\nconst NavBar = () => {\n    return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <div className=\"container\">\n        <a href=\"/#\" className=\"navbar-brand d-flex align-items-center\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" aria-hidden=\"true\" className=\"mr-2\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path><circle cx=\"12\" cy=\"13\" r=\"4\"></circle></svg>\n          <strong>Astronomy Photo of the Day!</strong>\n        </a>\n        \n\n        {/* <div className=\"collapse navbar-collapse\" id=\"navbarsExample07\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/\">Home </a>\n            </li>\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/addItem\">Add champ</a>\n            </li>\n          </ul>\n            <li className=\"nav-item\">\n              <a className=\"nav-link disabled\" href=\"/#\">Disabled</a>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <a className=\"nav-link dropdown-toggle\" href=\"/#\" id=\"dropdown07\" data-toggle=\"dropdown\" aria-expanded=\"false\">Dropdown</a>\n              <div className=\"dropdown-menu\" aria-labelledby=\"dropdown07\">\n                <a className=\"dropdown-item\" href=\"/#\">Action</a>\n                <a className=\"dropdown-item\" href=\"/#\">Another action</a>\n                <a className=\"dropdown-item\" href=\"/#\">Something else here</a>\n              </div>\n            </li>\n        </div> */}\n      </div>\n    </nav>\n    );\n}\n \nexport default NavBar;","import Main from './components/Main'\nimport NavBar from './components/NavBar'\n// import Footer from './components/Footer'\nimport './css/App.css';\n//import {BrowserRouter as Router, Switch, Route, Link, useLocation} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <Main />\n      {/* <Footer /> */}\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}